%New particle propagation
clc; clear all; close all
addpath("utils","images")
%%-----Initialize Run-----%%
seed = 0;
rng(seed) 
fileNS = sprintf('SimulationWS//3Agents2Faults_%s.mat',datestr(now,"mmddyy-HHMMSS"));

%%-----Define Initial Robot Parameters-----%%
robotVel     = 2;
angles       = -pi:pi/16:pi;
dt           = 0.1;
maxTurn      = pi/4;
maxRange     = 4;
epsilon      = 0.1;
initPoses    = [23 4 pi/2; 
                25 4 pi/2;
                27 4 pi/2;
                29 4 pi/2];
numParticles = 3;
decay        = 0.8;
numFaults    = 1; 

%%-----Define Initial Environment-----%%
numTasks = 7;
obDist = 1; 
triggerRz = 100;

%%-----Start-----%%
InitializeSimEnvironment
count = 0;

for i = 1:2000
    fprintf('count: %d; iter: %d; avg compTime: %.2f\n',count,i,avg_timePerVehicle)
    tic;
    count = count + 1;
    connected_logic %Determine if robots are connected - if so, share info

    for k = 1:agents
        %Lidar Scan
        
        first_covered
        rayPts_t{i,k} = rayPts;
        %Update known map
        M1(:,k) = updateOccupancyMap(zCellsTrue,M0(:,k),mapSize);

        %Add attraction force at specified time
        if i>600
            triggerRz = 300;
        end
        if count>triggerRz
            robots(k).coeffs.otherBots = min((count-triggerRz)*1.001,100);
            robots(k).frontier = max(2.5/(count-triggerRz),0);
        end
        
        if i==triggerFault1 && f>0
            realVel = [velCats(triggerParticle1),realVel(2:end)];
            particleFollow(1) = triggerParticle1;
        end
        if i == triggerFault2 && f>1
            realVel = [realVel(1),velCats(triggerParticle2),realVel(3:end)];%, realVel(3:end)];
            particleFollow(2) = triggerParticle2;
        end
    end
    for k = 1:agents
        fprintf('I am %d\n',k)
        occMap = reshape(MGhost(:,k),mapSize);
 
        %Compute particle movement
        particle_mimicry_3Agents
%         if any(sum(idxF,1)<1)||any(isempty(idxF))
%             agentFC{k}.otherBots = 2;
%         end
    end
    for k = 1:agents
        %Calculate force if connected
        move_real_robot_3Agents
        vel_t(i,k) = velAtt;
        ang_t(i,k) = angle;
        
    end
    b = toc;
    %Combine total map
    storageLogic
    
%     %Plot
%     h1 = subplot(1,2,1);
    plotInline_3Agents
    if connected && sum(sum(frontier))<1
        break
    end
end

% makeVideo(F,'Videos/FrontAssignment_3Agents')
save(fileNS)

